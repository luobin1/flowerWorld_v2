<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flower.dao.INewsDao">
<!-- 命名空间的值可以任意取，但是一般我们会设计一个接口，命名空间的值就设定为该接口的包名+接口名 -->

	<!-- resultType:返回结果的类型；如果返回的数据只有一条，那么直接返回该类型的对象；
	如果返回的结果是多条，自动生成泛型为该类的集合 -->
	<select id="findByU_id" resultType="com.flower.entity.News">
		  select *  from news WHERE u_id = #{u_id,jdbcType=INTEGER}
	</select>
	
	<select id="findByN_id" resultType="com.flower.entity.News">
		  select *  from news WHERE n_id = #{n_id,jdbcType=INTEGER}
	</select>
	
	<select id="selectProductsByPage" resultType="com.flower.entity.News">
		  select *  from news WHERE u_id = #{u_id,jdbcType=INTEGER} limit #{startPos},#{pageSize}
	</select>
	
	<select id="findCount" resultType="long">  
	  SELECT COUNT(*) FROM news WHERE u_id = #{u_id,jdbcType=INTEGER}   
	</select>
	
	 <insert id="addNews" parameterType="com.flower.entity.News">
	 	insert into news values(null,#{u_id},#{n_info},#{u_number},#{n_time},#{n_theme},null)
	 </insert>
	
	<delete id="deleteByN_id" parameterType="int">
		delete from news where n_id=#{n_id}
	</delete>
	
	<delete id="deleteFind" parameterType="java.util.List">
		delete from news where n_id in 
		 <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
		 	#{item} 
		 </foreach>
	</delete>
	
	<update id="updateNsign" parameterType="com.flower.entity.News">
		update news set n_sign=#{n_sign} where n_id=#{n_id}
	</update>
</mapper>

